# -*- coding: utf-8 -*-
"""01-Kelompok I-3.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1vNprNK6fKfj76X1bV01l8VO4KC2EZYlD
"""

import pandas as pd
pd.set_option('display.max_columns', None)

data = pd.read_csv('https://raw.githubusercontent.com/Rietaros/kampus_merdeka/main/HRDataset_v14.csv')
data.head()

"""# Pandas Question

1. What is the minimum, median, max, and average salary for employee by Married Description and Gender.
Hints: use agg function<br>
Expected Output as below<br>
(10 Points)
"""

# 1. What is the minimum, median, max, and average salary for employee by Married Description and Gender
# Hints: use agg function
# Expected Output as below
# (10 Points)

data.groupby(['MaritalDesc', 'Sex']).agg(
    min_salary=('Salary', 'min'),
    median_salary=('Salary', 'median'),
    max_salary=('Salary', 'max'),
    average_salary=('Salary', 'mean')
)

"""2. What is top-5 reason of termination?<br>
Expected Output as below<br>
(10 Points)
"""

#code here
data['TermReason'].value_counts().nlargest(5).rename('total_termination')

"""3. What is the highest number of employee by Recruitment Source that 'Exceeds' the Performance Score?
Hints: Use filter for Performance Score first. Don't forget to sort_values.<br>
Expected Output as below<br>
(10 Points)
"""

data.RecruitmentSource[data['PerformanceScore']=='Exceeds'].value_counts().rename('total_rectuit').sort_values(ascending=False)

"""4. How many managers in each department?
Hints: use nunique() as aggregation function.<br>
Expected Output as below.<br>
(10 Points)
"""

data.groupby('Department')['ManagerName'].nunique().rename('total_manager')

"""5. What is Termination Ratio by Gender?.
Hints: use value_counts(normalize=True).<br>
Expected Output as below.<br>
(10 Points)
"""

#code here
term_ratio = data.groupby('Sex')['Termd'].value_counts(normalize=True)
print(term_ratio)

"""# Create an EDA and Data Visualization Question"""

#Sample Visualization, the example is not counted for the final score :p
#Create 5 visualization for better understanding on data
from matplotlib import pyplot as plt
import seaborn as sns
import numpy as np

#Ratio termination by Gender

#Step1, get the data

term = data.groupby(by=['Sex'])\
                        .agg(total_termination=('Termd','sum')).reset_index()\

#Step2, Plot it
f, ax = plt.subplots(1, 1, figsize=(12, 8))
ax = sns.barplot(x='Sex', y='total_termination', hue='Sex', data=term, palette='cool')

"""6. Buatlah Scatter plot antara kolom "Salary" dengan "EngagementSurvey", beri warna berbeda sesuai dengan status di "Termd"<br>
(5 points)<br>
*bentuk output di bawah hanya contoh*
"""

import matplotlib.pyplot as plt
import pandas as pd
data = pd.read_csv('https://raw.githubusercontent.com/Rietaros/kampus_merdeka/main/HRDataset_v14.csv')

# Membuat scatter plot
plt.figure(figsize=(10, 6))

# Plot untuk karyawan yang masih aktif (Termd = 0)
plt.scatter(data[data['Termd'] == 0]['Salary'],
            data[data['Termd'] == 0]['EngagementSurvey'],
            color='blue', label='Aktif', alpha=0.6)

# Plot untuk karyawan yang sudah di-PHK (Termd = 1)
plt.scatter(data[data['Termd'] == 1]['Salary'],
            data[data['Termd'] == 1]['EngagementSurvey'],
            color='red', label='Di-PHK', alpha=0.6)

plt.xlabel('Gaji')
plt.ylabel('Skor Survei Keterlibatan')
plt.title('Scatter Plot Gaji vs Skor Survei Keterlibatan')
plt.legend()

# Menampilkan plot
plt.show()

"""7. Buatlah visualisasi barchart untuk menghitung jumlah "termination of an employee's" berdasarkan department.<br>
(5 points)<br>
*bentuk output di bawah hanya contoh*
"""

from matplotlib import pyplot as plt
import seaborn as sns

term_dep = data.groupby('Department').agg(total_term=('Termd', 'sum')).reset_index()

f, ax = plt.subplots(1, 1, figsize=(12, 6))
ax = sns.barplot(x='Department', y='total_term', hue='Department', data=term_dep, palette='cool')

"""8. Buatlah visualisasi Pie Chart untuk melihat persentasi jumlah karyawan yang "terminated" berdasarkan kolom "Position".<br>
(5 points)<br>
*bentuk output di bawah hanya contoh*
"""

term_pos = data.groupby('Position').agg(total_term=('Termd', 'sum')).reset_index()

plt.figure(figsize=(12, 6))
plt.pie(term_pos['total_term'], labels=term_pos['Position'],
        autopct='%1.0f%%',
        startangle=90)
plt.axis('equal')
plt.show()

"""9. Buat Boxplot yang menggambarkan Salary berdasarkan Marital Desc, bedakan berdasarkan Termd
(5 points)
"""

#code here
import seaborn as sns
flierprops = dict (marker='d', markerfacecolor='black', markersize=3)
sns.boxplot(data=data, x='Salary', y='MaritalDesc', hue='Termd', flierprops=flierprops)

"""10. Tampilkan pairplot antara kolom 'Salary', 'EngagementSurvey', 'EmpSatisfaction','Absences'
beri kategori warna berdasarkan 'Termd'<br>
(10 points)
"""

#codde here
sns.pairplot(data=data, hue='Termd', vars=['Salary', 'EngagementSurvey', 'EmpSatisfaction','Absences'], diag_kind='hist')

"""# Insight (Answering the Question)

11.	Is there any relationship between who a person works for (their manager) and their performance score? (10 points)<br>
 Pada data tidak diketahui riwayat manager setiap employee, yang bisa diketahui dari data hanyalah manager seorang employee pada saat ini. sehingga kita tidak bisa menentukan apakah manager memiliki korelasi dengan performance seseorang atau tidak. Pada data juga tidak ditemukan apa saja yang menjadi faktor-faktor penilaian performance score sehingga tidak dapat dipastikan apa saja yang menjadi penilaian setiap manager. Tetapi kita memiliki kemungkinan melalui perbandingan jumlah anggota tim yang "melebihi ekspektasi" (Exceeds) dan "sepenuhnya memenuhi ekspektasi" (Fully Meets) pada tabel. Manajer yang memiliki lebih banyak anggota dengan skor "Exceeds" dan "Fully Meets" dianggap memimpin tim dengan performa yang lebih baik, sedangkan manajer dengan lebih sedikit anggota di kategori tersebut dianggap memiliki tim dengan performa yang lebih rendah.

 <br>
12.	What are our best recruiting sources if we want to ensure a low ratio of termination? (10 points)<br>
Berdasarkan hasil perhitungan rasio antara Terminasi dan Jumlah recruitment berdasarkan RecruitmentSource, maka didapat rasio terminasi yang paling rendah adalah dari Website. Sehingga Recruitment Source yang paling baik (jika melihat dari rasio) adalah dari Website (7,69%)
"""

#12
#bandingkan jumlah terminasi per Recruitment Source dengan Total recruitment per Recruitment source

#jumlah terminasi tiap recruitment source
data =  pd.read_csv('https://raw.githubusercontent.com/Rietaros/kampus_merdeka/main/HRDataset_v14.csv')
term_recruitment = data.groupby(by=['RecruitmentSource'])\
                        .agg(total_termination=('Termd','sum'))
print('JUMLAH TERMINASI BERDASARKAN RECRUITMENT SOURCE\n')
print(term_recruitment)

#jumlah recruitment dari tiap recruitment source
recruitment_source = data['RecruitmentSource'].value_counts()
print('\nJUMLAH RECRUITMENT BERDASARKAN RECRUITMENT SOURCE\n')
print(recruitment_source)

#hitung rasio => membandingkan jumlah terminasi dengan jumlah recruitment berdasarkan recruitment source
ratio = term_recruitment['total_termination'] / recruitment_source
print('\nRASIO\n')
print(ratio)